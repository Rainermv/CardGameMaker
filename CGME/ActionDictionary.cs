//------------------------------------------------------------------------------
// <auto-generated>
//     O código foi gerado por uma ferramenta.
//     Versão de Tempo de Execução:4.0.30319.18444
//
//     As alterações ao arquivo poderão causar comportamento incorreto e serão perdidas se
//     o código for gerado novamente.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using UnityEngine;

namespace CGME
{
	public class DictionaryReference
	{
		private string _name;
		private string _type;

		public string Name{ get{return _name;}}
		public string   Type{ get{return _type;}}
		
		public DictionaryReference(string name, string t){
			this._type = t;
			this._name = name;
		}
	
	
	}
	
	public class ActionDictionary
	{
		// SINGLETON
		private static ActionDictionary instance;
		private ActionDictionary ()
		{
//			conditions = new Entry[]
//			{
//				
//				
//
//			};
				
			action_components = new DictionaryReference[]
			{
				new DictionaryReference("(C) If - Then - Else", 	typeof(ActionIfThenElse)				.FullName),
				new DictionaryReference("(C) Compare Buffer Size",typeof(ActionConditionBufferSize)		.FullName),
				new DictionaryReference("(C) Compare Parents", 	typeof(ActionConditionCompareParent)	.FullName),
				new DictionaryReference("(C) Compare Resource", 	typeof(ActionConditionCompareResource)	.FullName),
				new DictionaryReference("(C) Object is Valid", 	typeof(ActionConditionIsValid)			.FullName),
				new DictionaryReference("(E) Buffer - Save", 		typeof(ActionBufferSave)				.FullName),
				new DictionaryReference("(E) Buffer - Load", 		typeof(ActionBufferLoad)				.FullName),
				new DictionaryReference("(E) Buffer - Clear", 	typeof(ActionBufferClear)				.FullName),
				new DictionaryReference("(E) Event Action", 		typeof(CGME.ActionEvent)				.FullName),
				new DictionaryReference("(E) Destroy Object", 	typeof(CGME.ActionDestroyObject)		.FullName),
				new DictionaryReference("(E) End Phase", 		 	typeof(CGME.ActionEndPhase)				.FullName),
				new DictionaryReference("(E) Modify Resource", 	typeof(CGME.ActionModifyResource)		.FullName),
				new DictionaryReference("(E) Rearm", 			 	typeof(CGME.ActionArm)					.FullName),
				new DictionaryReference("(E) Select Target",	 	typeof(CGME.ActionSelect)			.FullName),
				new DictionaryReference("(E) Shuffle", 			 	typeof(CGME.ActionShuffle)				.FullName),
				new DictionaryReference("(E) Transfer Object", 	typeof(CGME.ActionTransferObject)		.FullName),
				new DictionaryReference("(E) Group", 				typeof(ActionGroup)						.FullName),
				//new Entry("Star Phase", new CGME.ActionEndPhase()   			.GetType().FullName)
			};
			
							
		}
		
		public static ActionDictionary GetInstance(){
			if (instance == null){
				//Debug.Log("Instantiating Dictionary");
				instance = new ActionDictionary();
			}
			
			return instance;
		}
		
		/////////////
		
		//private Entry[] conditions;
		private DictionaryReference[] action_components;
		
		private string[] names;
		
		public string[] GetNames(){
			
			if (names == null){
				names = new string[action_components.Length];
				for (int j = 0; j < names.GetLength(0); j++){
					
					names[j] = action_components[j].Name;
					//Debug.Log ("  " + action_names[i,j]);
					
				}
			}
			
			return names;
		
		}
		
//		public string[] GetConditions(){
//			string[] action_names = new string[conditions.GetLength(0)];
//			
//			for (int i = 0; i < action_names.GetLength(0); i++){
//				action_names[i] = conditions[i].Name ;
//			}
//			
//			return action_names;
//		}
		
		public string[] GetActionComponents(){
			string[] action_names = new string[action_components.GetLength(0)];
			
			for (int i = 0; i < action_names.GetLength(0); i++){
				action_names[i] = action_components[i].Name ;
			}
			
			return action_names;
		}
		
		public CGME.Action GetAction(string name_string){
			
			string type_name = GetType(name_string);
			//Debug.Log ("Type Name: " + type_name);

			if (type_name != null){
							
				Type t = Type.GetType (type_name);  // NULL????
				//Debug.Log (t.ToString());
				
				Action act = Activator.CreateInstance(t) as CGME.Action;
				if (act.CGType == "Name")
					act.CGType = name_string;
				return 	act;
			}
			
			return null;
		
		}
		
		public CGME.Action GetAction(int ind){
			if (action_components.Length > ind){
			 	string str = action_components[ind].Type;
				Type t = Type.GetType (str);
				
				Action act = Activator.CreateInstance(t) as CGME.Action;
				
				if (act.CGType == "Name")
					act.CGType = action_components[ind].Name;;
					
				return act;
			 	
			}
			
			return null;
		}
		
		private string GetType(string name){
//			//Debug.Log("Getting type of name: " + name);
//			foreach (Entry e in conditions){
//				if (e.Name == name){
//					 return e.Type;
//				}
//			}
			foreach (DictionaryReference e in action_components){
				if (e.Name == name){
					return e.Type;
				}
			}
			Debug.LogWarning ("  Type not found");
			return null;
		}
		
	}
				
		
}


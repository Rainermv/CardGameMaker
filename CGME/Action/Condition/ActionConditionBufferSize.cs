//------------------------------------------------------------------------------
// <auto-generated>
//     O código foi gerado por uma ferramenta.
//     Versão de Tempo de Execução:4.0.30319.18444
//
//     As alterações ao arquivo poderão causar comportamento incorreto e serão perdidas se
//     o código for gerado novamente.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
namespace CGME
{
	public class ActionConditionBufferSize : Action
	{
		
		public int Value;
		public CompareOperation Operation;
		
		public ActionConditionBufferSize () : base("Compare Buffer Size")
		{
			Value = 0;
			Operation = CompareOperation.Equals;
		}
		
		public override bool Effect (CGObject s, Actor p1, Actor p2)
		{
			int buffer_size = manager.CommmandBufferGetSize();
			
			Log.Print(this,"Comparing buffer - " + buffer_size + " " + Operation + " " + Value);
			
			switch (Operation){
				case CompareOperation.Equals: return buffer_size == Value;
				case CompareOperation.Larger: return Value > buffer_size;
				case CompareOperation.LargerOrEqual: return Value >= buffer_size;
				case CompareOperation.Smaller: return Value < buffer_size;
				case CompareOperation.SmallerOrEqual: return Value <= buffer_size;
			}
			
			return false;
		}
		
		public override void SaveParameters (System.IO.BinaryWriter writer)
		{
			base.SaveParameters (writer);
			
			writer.Write (Value);
			writer.Write ((Int32) Operation);
		}
		
		public override void LoadParameters (System.IO.BinaryReader reader)
		{
			base.LoadParameters (reader);
			
			Value = reader.ReadInt32();
			Operation = (CompareOperation)reader.ReadInt32 ();
		}
		
		public override void CopyFrom (Action copy)
		{
			base.CopyFrom (copy);
			
			Value = (copy as ActionConditionBufferSize).Value;
			Operation = (copy as ActionConditionBufferSize).Operation;
		}
	}
}


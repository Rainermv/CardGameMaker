//------------------------------------------------------------------------------
// <auto-generated>
//     O código foi gerado por uma ferramenta.
//     Versão de Tempo de Execução:4.0.30319.18444
//
//     As alterações ao arquivo poderão causar comportamento incorreto e serão perdidas se
//     o código for gerado novamente.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
namespace CGME
{
	public class ActionDestroyObject : Action
	{
		private SelectionSource source;
		private string source_string;
				
		public ActionDestroyObject() : base("Destroy Object"){
			
			source = SelectionSource.Original;
			source_string = "Object Type";
		}
		
		public SelectionSource Source{
			get {return source;}
			set {source = value;}
		}
		
		public string SourceString{
			get{return source_string;}
			set {source_string = value;}
		}
		
		public override bool Effect(CGObject s, Actor p1, Actor p2){
			
			CGObject source_obj = GetFromSource(source, source_string, s, p1, p2);
			
			if (source_obj != null){
				
				Log.Print(this,"Destroying " + source_obj.CGType);
				
				source_obj.Destroy();
				
				return true;
			}
			
			Log.Warning(this,"Destroy Action Failed");	
			return false;
		}
		
		
		
		public override void SaveParameters(System.IO.BinaryWriter writer){
			base.SaveParameters(writer);
			
			writer.Write((Int32)source);
						
			writer.Write (source_string);
		}	
		
		public override void LoadParameters(System.IO.BinaryReader reader){
			base.LoadParameters(reader);
			
			source = (SelectionSource)reader.ReadInt32();
			
			source_string = reader.ReadString ();
			
			//trigger = (CGME.InterfaceEvent)Enum.Parse(typeof(InterfaceEvent),reader.ReadString());
		}
		
		public override void CopyFrom(Action copy){
			
			base.CopyFrom(copy);
			
			source = (copy as ActionDestroyObject).source;
			source_string = (copy as ActionDestroyObject).source_string;

		}
	}
}


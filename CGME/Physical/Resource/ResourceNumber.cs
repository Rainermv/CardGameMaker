//------------------------------------------------------------------------------
// <auto-generated>
//     O código foi gerado por uma ferramenta.
//     Versão de Tempo de Execução:4.0.30319.18444
//
//     As alterações ao arquivo poderão causar comportamento incorreto e serão perdidas se
//     o código for gerado novamente.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
namespace CGME
{
	public class ResourceNumber : CGME.Resource
	{
		//[UnityEngine.SerializeField]
		private int _value;
		
		public ResourceNumber(){
			cgtype = "Name";
			Value = 0;
		}
//		public ResourceNumber(string name, int value, bool enabled = true){
//			
//			this.Name = name;
//			this.SetValue(value);
//			this.enabled = enabled;
//			
//		}
		
		public int Value{
			get{return _value;}
			set{_value = value;}
		}
		
		public override void Enable (bool enable)
		{
			this.enabled = enable;
		}
		
		public override string ToString(){
			return (cgtype + ": " + Value.ToString());
		}
		
		public void AddValue(int value){
			this._value+= value;
			DispatchEvent(EngineEvent.ModifyResource, null, null);
		}
		
		public void SetValue(int value){
			_value = value;
			DispatchEvent(EngineEvent.ModifyResource, null, null);
		}
		
		public override void SaveParameters(System.IO.BinaryWriter writer){
			writer.Write(_value);
			//action.Write(name);
		}
		
		public override void LoadParameters(System.IO.BinaryReader reader){
			_value = reader.ReadInt32();
		}
		
//		public override byte[] Save(){
//			
//			System.IO.MemoryStream stream = new System.IO.MemoryStream();
//			System.IO.BinaryWriter writer = new System.IO.BinaryWriter(stream);
//			
//			writer.Write(_value);
//			
//			byte[] temp = stream.ToArray();
//			//GameManager.DebugLog("Write " + _value);
//			
//			return temp;
//			
//		}
//		public override void Load(byte[] FromBytes){
//			
//			if (FromBytes != null){
//				
//				
//				System.IO.MemoryStream stream = new System.IO.MemoryStream(FromBytes);
//				System.IO.BinaryReader reader = new System.IO.BinaryReader(stream);
//				int num = reader.ReadInt32();
//				//GameManager.DebugLog("Read " + num);
//				_value = num;
//			}
//			
//		}


		
		
		
	}
}


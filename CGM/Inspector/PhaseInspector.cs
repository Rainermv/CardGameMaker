//------------------------------------------------------------------------------
// <auto-generated>
//     O código foi gerado por uma ferramenta.
//     Versão de Tempo de Execução:4.0.30319.18444
//
//     As alterações ao arquivo poderão causar comportamento incorreto e serão perdidas se
//     o código for gerado novamente.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using UnityEditor;
using UnityEngine;

namespace CGMEditor
{
[CustomEditor(typeof(CGM.Phase))]
	public class PhaseInspector : CGMObjectInspector
	{
		
		CGM.Phase phase_target;
		private string[] action_names;
		CGM.GameManager manager;
	
		protected override void OnEnable(){
			
			base.OnEnable();
			
			manager = FindObjectOfType<CGM.GameManager>();
			action_names = manager.GetActionTypes();
			
			phase_target = (CGM.Phase)target;
		
		}
		
		public override void DrawObject(CGM.CGMObject Target){
		
			phase_target.CGME_Phase.CGType = 
				EditorGUILayout.TextField("Type",phase_target.CGME_Phase.CGType);
			Target.gameObject.name = phase_target.CGME_Phase.CGType;
		
			EditorGUILayout.LabelField("Actions");
			
			CGM.Phase p = (CGM.Phase)Target;
			if (GUILayout.Button ("Add Action"))
				p.action_sequence.Add(0);
			
			for (int i = 0; i < phase_target.action_sequence.Count; i++){
				p.action_sequence[i]= EditorGUILayout.Popup(p.action_sequence[i],action_names);
	
			}
		
		}
		

		
	//	public override void OnInspectorGUI()
	//	{
	//		CGM.Card Target = (CGM.Card)target;
	//		
	//		Target.name = EditorGUILayout.TextField("Name", Target.name);
	//		EditorGUILayout.LabelField("Resources");
	//		foreach (CGM.Resource res in Target.Resources){
	//			EditorGUILayout.BeginHorizontal();
	//				res.name = EditorGUILayout.TextField(res.name);
	//				
	//				if (res.Resource_type ==  CGM.ResourceType.Number){
	//					CGME.ResourceNumber cgres = (CGME.ResourceNumber)res.CGME_Resource;
	//					cgres.Value = EditorGUILayout.IntField (cgres.Value);
	//				}
	//				else if (res.Resource_type ==  CGM.ResourceType.Text){
	//					CGME.ResourceText cgres = (CGME.ResourceText)res.CGME_Resource;
	//					cgres.Value = EditorGUILayout.TextField (cgres.Value);
	//				}
	//				else if (res.Resource_type ==  CGM.ResourceType.Bool){
	//					CGME.ResourceBool cgres = (CGME.ResourceBool)res.CGME_Resource;
	//					cgres.Value = EditorGUILayout.Toggle (cgres.Value);
	//				}
	//				else if (res.Resource_type ==  CGM.ResourceType.Action){
	//					CGME.ResourceAction cgres = (CGME.ResourceAction)res.CGME_Resource;
	//					//cgres.Value = EditorGUILayout.TextArea.Field (cgres.Value);
	//					EditorGUILayout.LabelField (cgres.Value.Name);
	//				}
	//				
	//			
	//			EditorGUILayout.EndHorizontal();
	//		}
	//		
	//		
	//		//EditorGUILayout.LabelField("Level", myTarget.Level.ToString());
	//	}
	}
}


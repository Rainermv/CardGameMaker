//------------------------------------------------------------------------------
// <auto-generated>
//     O código foi gerado por uma ferramenta.
//     Versão de Tempo de Execução:4.0.30319.18444
//
//     As alterações ao arquivo poderão causar comportamento incorreto e serão perdidas se
//     o código for gerado novamente.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using UnityEditor;

namespace CGMEditor
{
	public class ActionEditorNodeTransfer : ActionEditorNode
	{
		public ActionEditorNodeTransfer (CGME.Action act) : base(act)
		{

		}
		
		public override void DrawAsInspector(){
		
			base.DrawAsInspector();
		
			CGME.ActionTransferObject action_transfer = (action as CGME.ActionTransferObject);
		
				//action.Destination = EditorGUILayout.TextField("Destination", action.Destination);
				//action.Destination = Display.TextField(Target,"Destination", action.Destination);
				EditorGUILayout.BeginHorizontal();
			action_transfer.Source = (CGME.SelectionSource)Display.EnumPopup(this,"Object",action_transfer.Source);
			if (action_transfer.Source == CGME.SelectionSource.Type) 
				action_transfer.SourceString = Display.TextField(this,"Type",action_transfer.SourceString);
				EditorGUILayout.EndHorizontal();
				
				EditorGUILayout.BeginHorizontal();
			action_transfer.Destination = (CGME.SelectionSource)Display.EnumPopup(this,"Destination",action_transfer.Destination);
			if (action_transfer.Destination == CGME.SelectionSource.Type) 
				action_transfer.DestinationString = Display.TextField(this,"Type",action_transfer.DestinationString);
				EditorGUILayout.EndHorizontal();
			}
	}
}

